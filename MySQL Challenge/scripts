-- SCHEMA SETUP

-- Drop tables if they already exist (optional)
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Employees;
DROP TABLE IF EXISTS Customers;
DROP TABLE IF EXISTS Products;

-- Employees Table
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Role VARCHAR(50),
    CommissionRate DECIMAL(5,2) -- e.g. 0.10 = 10%
);

-- Customers Table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Address VARCHAR(255),
    City VARCHAR(100),
    Postcode VARCHAR(20)
);

-- Products Table
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Category VARCHAR(50),
    Price DECIMAL(10,2)
);

-- Orders Table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    ProductID INT,
    EmployeeID INT,
    OrderDate DATE,
    Quantity INT,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- SAMPLE DATA

-- Employees
INSERT INTO Employees VALUES
(1, 'Alice', 'Wong', 'Sales Associate', 0.10),
(2, 'Bob', 'Nguyen', 'Sales Manager', 0.15);

-- Customers
INSERT INTO Customers VALUES
(1, 'Jane', 'Smith', 'jane@example.com', '123 High St', 'London', 'E1 6AN'),
(2, 'John', 'Doe', 'john@example.com', '45 Low St', 'Bristol', 'BS1 4TR');

-- Products
INSERT INTO Products VALUES
(1, 'Laptop', 'Electronics', 999.99),
(2, 'Headphones', 'Electronics', 199.99),
(3, 'Notebook', 'Stationery', 5.99);

-- Orders
INSERT INTO Orders VALUES
(1, 1, 1, 1, '2025-07-01', 1), -- Jane buys Laptop from Alice
(2, 2, 2, 1, '2025-07-02', 2), -- John buys 2 Headphones from Alice
(3, 1, 3, 2, '2025-07-03', 10); -- Jane buys 10 Notebooks from Bob

-- REPORTING QUERIES

-- Total Sales per Employee
SELECT 
    E.FirstName || ' ' || E.LastName AS Employee,
    SUM(P.Price * O.Quantity) AS TotalSales
FROM Orders O
JOIN Employees E ON O.EmployeeID = E.EmployeeID
JOIN Products P ON O.ProductID = P.ProductID
GROUP BY E.EmployeeID;

-- Employee Commissions
SELECT 
    E.FirstName || ' ' || E.LastName AS Employee,
    SUM(P.Price * O.Quantity) AS TotalSales,
    E.CommissionRate,
    ROUND(SUM(P.Price * O.Quantity) * E.CommissionRate, 2) AS CommissionEarned
FROM Orders O
JOIN Employees E ON O.EmployeeID = E.EmployeeID
JOIN Products P ON O.ProductID = P.ProductID
GROUP BY E.EmployeeID;

-- Revenue from Each Product
SELECT 
    P.ProductName,
    SUM(O.Quantity) AS UnitsSold,
    SUM(O.Quantity * P.Price) AS TotalRevenue
FROM Orders O
JOIN Products P ON O.ProductID = P.ProductID
GROUP BY P.ProductID;

-- Generate Shipping Labels
SELECT 
    C.FirstName || ' ' || C.LastName AS Customer,
    C.Address || ', ' || C.City || ', ' || C.Postcode AS ShippingAddress
FROM Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID;

-- Sales by Customer
SELECT 
    C.FirstName || ' ' || C.LastName AS Customer,
    SUM(O.Quantity * P.Price) AS TotalSpent
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
JOIN Products P ON O.ProductID = P.ProductID
GROUP BY C.CustomerID;
